@page "/ViewPosts/{postId:int}"
@using global::Shared.Models
@using HttpClients.ClientInterfaces
@inject IPostService PostService
@attribute [Authorize]


<h3>View Post</h3>

@if (posts == null)
{
    <p>Loading posts...</p>
}
else if (!posts.Any())
{
    <p>No posts to display.</p>
}
else
{
    <ul>
        @foreach (var post in posts)
        {
            <li>
                <strong>@post?.Title</strong> by @post?.Owner?.UserName
                <p>@post?.Body</p>
            </li>
        }
    </ul>
}

@code {
    private IEnumerable<Post> posts;

    [Parameter]
    public int? postId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Console.WriteLine("OnInitializedAsync called");
        try
        {
            posts = await PostService.GetAsync(userName: null, userId: null, titleContains: null, bodyContains: null);
            Console.WriteLine($"Number of posts: {posts.Count()}");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error: {ex.Message}");
        }

        if (postId.HasValue)
        {
            posts = posts.Where(p => p.Id == postId);
        }
    }
}
